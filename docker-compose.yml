version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: photo-selection-db
    environment:
      POSTGRES_DB: photo_selection_db
      POSTGRES_USER: photo_user
      POSTGRES_PASSWORD: photo_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U photo_user -d photo_selection_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage (optional, for future use)
  redis:
    image: redis:7-alpine
    container_name: photo-selection-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application (for production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: photo-selection-app
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://photo_user:photo_password@postgres:5432/photo_selection_db
      - JWT_SECRET=your-super-secret-jwt-key
      - NEXTAUTH_SECRET=your-nextauth-secret
      - NEXTAUTH_URL=http://localhost:3000
      - SOCKET_IO_PORT=3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./.env.local:/app/.env.local
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
